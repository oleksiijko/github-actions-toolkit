name: Full GitHub Actions Toolkit Test

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  summarize-pr:
    name: 🤖 AI PR Summarizer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run AI PR Summarizer
        uses: ./ai-pr-summarizer
        with:
          pr_number: ${{ github.event.pull_request.number }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print GPT Summary
        run: cat summary.md || echo "No summary generated"

      - name: Upload PR Summary
        uses: actions/upload-artifact@v4
        with:
          name: pr-summary
          path: summary.md

  chatops-command:
    name: 💬 ChatOps Command Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./chatops-pr-bot
        with:
          payload_path: ./examples/payload.json

  code-formatter:
    name: 🧹 Code Formatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cp -r ./examples/nodejs-project/* ./
      - uses: ./code-formatter
        with:
          example_input: prettier
      - name: Show formatted files
        run: git diff --stat || echo "No changes"

  update-deps:
    name: 📦 Auto Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cp -r ./examples/nodejs-project/* ./
      - uses: ./auto-update-dependencies
        with:
          package_manager: npm
          commit_message: "test: deps"
          branch: main

  secrets-scan:
    name: 🔐 Secrets Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./secrets-scanner

  security-scan:
    name: 🔒 Security Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./security-scanner

  performance-report:
    runs-on: ubuntu-latest
    steps:
      - name: 📄 Checkout Repository
        uses: actions/checkout@v3

      - name: 🌐 Run Performance Report Generator
        uses: ./performance-report-generator
        with:
          url: https://example.com
          output_format: json

      - name: 📃 Show Report File
        run: cat report.json || echo "Report not found"

      - name: 📂 Upload JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: report.json

      - name: 📝 Generate Markdown Summary
        run: |
          echo "## ✨ Lighthouse Summary" > summary.md
          echo "" >> summary.md
          echo "| Metric | Value |" >> summary.md
          echo "|--------|-------|" >> summary.md
          echo "| LCP | $(jq -r '.audits["largest-contentful-paint"].displayValue' report.json) |" >> summary.md
          echo "| CLS | $(jq -r '.audits["cumulative-layout-shift"].displayValue' report.json) |" >> summary.md
          echo "| TBT | $(jq -r '.audits["total-blocking-time"].displayValue' report.json) |" >> summary.md
          echo "| FCP | $(jq -r '.audits["first-contentful-paint"].displayValue' report.json) |" >> summary.md
          echo "| TTI | $(jq -r '.audits["interactive"].displayValue' report.json) |" >> summary.md

      - name: 📝 Upload Summary
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-summary
          path: summary.md

      - name: 👁️ Print Markdown Summary in UI
        run: cat summary.md

      - name: 🚨 Alert on Poor LCP
        run: |
          LCP=$(jq -r '.audits["largest-contentful-paint"].numericValue' report.json)
          if (( $(echo "$LCP > 2500" | bc -l) )); then
            echo "::warning::LCP is high: ${LCP}ms"
          else
            echo "LCP is fine: ${LCP}ms"
          fi

      - name: 📬 Post Comment to PR (Optional)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
          result-encoding: string

  badge-gen:
    name: 🏅 Badge Generator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./badge-generator

  dependency-diff:
    name: 📦 Dependency Diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./dependency-diff

  dead-code:
    name: 🧹 Dead Code Cleaner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./dead-code-cleaner

  artifact-upload:
    name: 💾 Artifact Uploader
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./artifact-uploader

  deploy-anywhere:
    name: 🌐 Deploy Anywhere
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./deploy-anywhere

  monorepo-splitter:
    name: 📄 Monorepo Splitter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./monorepo-splitter

  setup-toolkit:
    name: ⚖️ Setup Toolkit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./setup-toolkit

  pr-automator:
    name: 🔄 PR Automator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./pr-automator

  test-matrix:
    name: 📊 Matrix Runner
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: ./test-matrix-runner

  test-runner:
    name: ✅ Test Runner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./test-runner
